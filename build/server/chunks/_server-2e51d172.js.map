{"version":3,"file":"_server-2e51d172.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/foodlog/_date_/updatetargettotals/_server.js"],"sourcesContent":["import \"../../../../../chunks/index.js\";\nimport { PrismaClient } from \"@prisma/client\";\nimport { u as user } from \"../../../../../chunks/stores.js\";\nconst prisma = new PrismaClient();\nasync function POST({ request }) {\n  const record = await request.json();\n  const existingRecord = await prisma.targetTotals.findFirst({\n    where: {\n      feeding_date: record.feeding_date,\n      user_id: user.name\n    }\n  });\n  if (existingRecord == null) {\n    console.log(\"creating Record: \" + record.feeding_datecl);\n    await prisma.targetTotals.create({\n      data: {\n        feeding_date: record.feeding_date,\n        fat_grams: parseInt(record.fat_grams ? record.fat_grams : 0),\n        carbs_grams: parseInt(record.carbs_grams ? record.carbs_grams : 0),\n        protein_grams: parseInt(record.protein_grams ? record.protein_grams : 0),\n        kcals: parseInt(record.Kcals ? record.Kcals : 0),\n        user_id: user.name\n      }\n    });\n  } else {\n    console.log(\"existingRecord: \" + existingRecord.id);\n    await prisma.targetTotals.update({\n      where: {\n        id: existingRecord.id\n      },\n      data: {\n        feeding_date: record.feeding_date,\n        fat_grams: parseInt(record.fat_grams ? record.fat_grams : 0),\n        carbs_grams: parseInt(record.carbs_grams ? record.carbs_grams : 0),\n        protein_grams: parseInt(record.protein_grams ? record.protein_grams : 0),\n        kcals: parseInt(record.Kcals ? record.Kcals : 0),\n        user_id: user.name\n      }\n    });\n  }\n  return new Response(JSON.stringify({ status: \"success\" }));\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AAClC,eAAe,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE;AACjC,EAAE,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;AACtC,EAAE,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC;AAC7D,IAAI,KAAK,EAAE;AACX,MAAM,YAAY,EAAE,MAAM,CAAC,YAAY;AACvC,MAAM,OAAO,EAAE,IAAI,CAAC,IAAI;AACxB,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,cAAc,IAAI,IAAI,EAAE;AAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAC7D,IAAI,MAAM,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;AACrC,MAAM,IAAI,EAAE;AACZ,QAAQ,YAAY,EAAE,MAAM,CAAC,YAAY;AACzC,QAAQ,SAAS,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;AACpE,QAAQ,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;AAC1E,QAAQ,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC;AAChF,QAAQ,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACxD,QAAQ,OAAO,EAAE,IAAI,CAAC,IAAI;AAC1B,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;AACxD,IAAI,MAAM,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;AACrC,MAAM,KAAK,EAAE;AACb,QAAQ,EAAE,EAAE,cAAc,CAAC,EAAE;AAC7B,OAAO;AACP,MAAM,IAAI,EAAE;AACZ,QAAQ,YAAY,EAAE,MAAM,CAAC,YAAY;AACzC,QAAQ,SAAS,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;AACpE,QAAQ,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;AAC1E,QAAQ,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC;AAChF,QAAQ,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACxD,QAAQ,OAAO,EAAE,IAAI,CAAC,IAAI;AAC1B,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AAC7D;;;;"}