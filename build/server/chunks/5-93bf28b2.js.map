{"version":3,"file":"5-93bf28b2.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/foodlog/_date_/_page.server.js","../../../.svelte-kit/adapter-node/nodes/5.js"],"sourcesContent":["import { N as NutritionSmartAIThingie } from \"../../../../chunks/SmartAIThingie.js\";\nimport { PrismaClient } from \"@prisma/client\";\nimport { c as currentDate, u as user } from \"../../../../chunks/stores.js\";\nconst prisma = new PrismaClient();\nvar foodNutrition = \"wait for it...\";\nvar dbData = [];\nvar allFoods = [];\nvar forDate = \"\";\nvar targetTotals;\nvar calculatedTotals = {};\nvar differenceTotals = {};\nconst load = async ({ params }) => {\n  if (!params.date) {\n    forDate = new Date().toString().split(\"T\")[0];\n  } else {\n    forDate = params.date;\n  }\n  currentDate.set(forDate);\n  await loadData(forDate);\n  return {\n    /**\n     * Get nutrition data from the server\n     */\n    kcals: foodNutrition,\n    rowData: dbData,\n    foodReferences: allFoods,\n    targetTotals,\n    calculatedTotals,\n    differenceTotals,\n    today: forDate\n  };\n};\nasync function loadData(date) {\n  dbData = await prisma.foodLog.findMany({\n    where: {\n      feeding_date: date,\n      user_id: user.name\n    },\n    orderBy: {\n      createdAt: \"asc\"\n    }\n  });\n  allFoods = await prisma.foodReference.findMany({\n    // select everything except the image\n    select: {\n      food_name: true,\n      food_qty: true,\n      fat_grams: true,\n      carbs_grams: true,\n      protein_grams: true,\n      kkcals: true\n    },\n    where: {\n      user_id: user.name\n    }\n  });\n  targetTotals = await prisma.targetTotals.findFirst({\n    where: {\n      feeding_date: date\n      //,\n      // TODO: Figure out why this is not working in prod, the filter is failing as not defined\n      // user_id: user.name\n    }\n  });\n  if (targetTotals == null) {\n    targetTotals = { label: \"Target Totals\" };\n  } else {\n    targetTotals.label = \"Target Totals\";\n  }\n  calculatedTotals = dbData.reduce((acc, cur) => {\n    acc.protein_grams += Math.round(cur.protein_grams);\n    acc.carbs_grams += Math.round(cur.carbs_grams);\n    acc.fat_grams += Math.round(cur.fat_grams);\n    acc.kcals += Math.round(cur.kkcals);\n    return acc;\n  }, {\n    protein_grams: 0,\n    carbs_grams: 0,\n    fat_grams: 0,\n    kcals: 0\n  });\n  calculatedTotals.label = \"Calculated Totals\";\n  differenceTotals = {\n    label: \"Difference\",\n    protein_grams: targetTotals.protein_grams - calculatedTotals.protein_grams,\n    carbs_grams: targetTotals.carbs_grams - calculatedTotals.carbs_grams,\n    fat_grams: targetTotals.fat_grams - calculatedTotals.fat_grams,\n    kcals: targetTotals.kcals - calculatedTotals.kcals\n  };\n}\nconst actions = {\n  /**\n   * add new food to the log, whether a lookup from a reference list or a result of calling GPT-3\n   */\n  addfood: async ({ request, cookies }) => {\n    const data = await request.formData();\n    const food = data.get(\"food\");\n    const foodReferenceEntry = await prisma.foodReference.findFirst({\n      where: {\n        food_name: food,\n        user_id: user.name\n      }\n    });\n    if (foodReferenceEntry != null) {\n      nutritionData = foodReferenceEntry;\n    } else {\n      var nutritionData = await NutritionSmartAIThingie.askForJSON(food);\n      var imageBase64 = await NutritionSmartAIThingie.generateImage(food);\n      await prisma.foodReference.create({\n        data: {\n          user_id: user.name,\n          food_name: nutritionData.food_name,\n          food_qty: nutritionData.food_qty,\n          fat_grams: nutritionData.fat_grams,\n          carbs_grams: nutritionData.carbs_grams,\n          protein_grams: nutritionData.protein_grams,\n          kkcals: nutritionData.kkcals,\n          imageBase64\n        }\n      });\n    }\n    await prisma.foodLog.create({\n      data: {\n        user_id: user.name,\n        food_name: nutritionData.food_name,\n        food_qty: nutritionData.food_qty,\n        fat_grams: nutritionData.fat_grams,\n        carbs_grams: nutritionData.carbs_grams,\n        protein_grams: nutritionData.protein_grams,\n        kkcals: nutritionData.kkcals,\n        feeding_date: forDate\n      }\n    });\n    dbData = await prisma.foodLog.findMany({\n      where: {\n        feeding_date: forDate,\n        user_id: user.name\n      },\n      orderBy: {\n        createdAt: \"asc\"\n      }\n    });\n    allFoods = await prisma.foodReference.findMany({\n      // select everything except the image\n      select: {\n        food_name: true,\n        food_qty: true,\n        fat_grams: true,\n        carbs_grams: true,\n        protein_grams: true,\n        kkcals: true\n      },\n      where: {\n        user_id: user.name\n      }\n    });\n  }\n};\nexport {\n  actions,\n  load\n};\n","import * as server from '../entries/pages/foodlog/_date_/_page.server.js';\n\nexport const index = 5;\nexport const component = async () => (await import('../entries/pages/foodlog/_date_/_page.svelte.js')).default;\nexport const file = '_app/immutable/components/pages/foodlog/_date_/_page.svelte-ccfb4fa3.js';\nexport { server };\nexport const imports = [\"_app/immutable/components/pages/foodlog/_date_/_page.svelte-ccfb4fa3.js\",\"_app/immutable/chunks/index-188eb586.js\",\"_app/immutable/chunks/index-de9ade72.js\",\"_app/immutable/chunks/stores-867fc975.js\",\"_app/immutable/chunks/ArrowUp.svelte_svelte_type_style_lang-146fd073.js\"];\nexport const stylesheets = [\"_app/immutable/assets/_page-abe6b2cd.css\",\"_app/immutable/assets/ArrowUp-d004936d.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}