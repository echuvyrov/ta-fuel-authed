import{S,i as T,s as V,k as _,a as w,q as O,l as p,m as v,h as l,c as C,r as q,n as b,p as h,b as y,K as E,W as P,f as N,t as F,d as K,E as L,o as z,a7 as A,x as G,y as M,z as H,A as J,g as Q,v as U}from"../../../chunks/index-188eb586.js";import{G as B,C as X}from"../../../chunks/ArrowUp.svelte_svelte_type_style_lang-146fd073.js";function R(c){let e,a,n;return a=new X({props:{size:"60",color:"#FF3E00",unit:"px",duration:"1s"}}),{c(){e=_("div"),G(a.$$.fragment),this.h()},l(s){e=p(s,"DIV",{style:!0});var i=v(e);M(a.$$.fragment,i),i.forEach(l),this.h()},h(){h(e,"display","flex"),h(e,"justify-content","center"),h(e,"padding","10px")},m(s,i){y(s,e,i),H(a,e,null),n=!0},i(s){n||(N(a.$$.fragment,s),n=!0)},o(s){F(a.$$.fragment,s),n=!1},d(s){s&&l(e),J(a)}}}function Y(c){let e,a,n,s,i,f,k,g,u,m,o,D,x,r=c[1]&&R();return{c(){e=_("form"),a=_("input"),n=w(),r&&r.c(),s=w(),i=_("center"),f=_("h3"),k=O("Food Reference List"),g=w(),u=_("div"),m=_("div"),this.h()},l(t){e=p(t,"FORM",{action:!0,method:!0});var d=v(e);a=p(d,"INPUT",{name:!0,class:!0}),d.forEach(l),n=C(t),r&&r.l(t),s=C(t),i=p(t,"CENTER",{});var I=v(i);f=p(I,"H3",{});var W=v(f);k=q(W,"Food Reference List"),W.forEach(l),I.forEach(l),g=C(t),u=p(t,"DIV",{style:!0});var j=v(u);m=p(j,"DIV",{id:!0,class:!0,style:!0}),v(m).forEach(l),j.forEach(l),this.h()},h(){b(a,"name","food"),a.value="Add food to the reference list",b(a,"class","svelte-brt59l"),b(e,"action","?/addfood"),b(e,"method","POST"),b(m,"id","datagrid"),b(m,"class","ag-theme-alpine"),h(m,"height","70vh"),h(m,"width","100%"),h(u,"display","flex"),h(u,"justify-content","center"),h(u,"align-items","center")},m(t,d){y(t,e,d),E(e,a),y(t,n,d),r&&r.m(t,d),y(t,s,d),y(t,i,d),E(i,f),E(f,k),y(t,g,d),y(t,u,d),E(u,m),c[4](m),o=!0,D||(x=[P(a,"focus",$),P(a,"keydown",c[2])],D=!0)},p(t,[d]){t[1]?r?d&2&&N(r,1):(r=R(),r.c(),N(r,1),r.m(s.parentNode,s)):r&&(Q(),F(r,1,1,()=>{r=null}),K())},i(t){o||(N(r),o=!0)},o(t){F(r),o=!1},d(t){t&&l(e),t&&l(n),r&&r.d(t),t&&l(s),t&&l(i),t&&l(g),t&&l(u),c[4](null),D=!1,L(x)}}}async function Z(c,e){const a=parseInt(e.protein_grams),n=parseInt(e.carbs_grams),s=parseInt(e.fat_grams),i=a*4+n*4+s*9;console.log("protein "+a+" fat "+s+" carbs "+n+"Kcals: "+i),e.kkcals=i,c.setDataValue("kkcals",e.kkcals);const f=JSON.stringify(e);if(!(await fetch("/reference/updaterecord",{method:"POST",headers:{"Content-Type":"application/json"},body:f})).ok)throw Error(json.message)}const $=c=>c.target.select();function ee(c,e,a){let{data:n}=e;var s,i,f=!0;let g={columnDefs:[{headerName:"Food",field:"food_name",editable:!0,minWidth:100},{headerName:"Qty",field:"food_qty",editable:!0,minWidth:70},{headerName:"Fat, g",field:"fat_grams",editable:!0,minWidth:70},{headerName:"Carbs, g",field:"carbs_grams",editable:!0,minWidth:70},{headerName:"Protein, g",field:"protein_grams",editable:!0,minWidth:70},{headerName:"Kcals",field:"kkcals",editable:!0,minWidth:120}],rowData:n.rowData,onCellValueChanged(o){Z(o.node,o.data)}};z(()=>{i=new B(s,g),a(1,f=!1)}),A(()=>{i&&i.destroy()});const u=o=>{o.key=="Enter"&&a(1,f=!0)};function m(o){U[o?"unshift":"push"](()=>{s=o,a(0,s)})}return c.$$set=o=>{"data"in o&&a(3,n=o.data)},[s,f,u,n,m]}class se extends S{constructor(e){super(),T(this,e,ee,Y,V,{data:3})}}export{se as default};
